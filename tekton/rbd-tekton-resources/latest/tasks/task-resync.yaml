apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: execute-resync
spec:
#  inputs:
#    params:
#      - name: pool
#        type: string
#        description: name of pool
  steps:
    - name: exec-rbd-command
      image: quay.io/rcook/storage-rehost:toolbox
      command:
        - "bash"
        - "-c"
        - |
          pool="replicapool"
          arr=()
          while IFS= read -r line; do
            arr+=( "$pool/$line" )
          done < <( rbd ls $pool )
          j=0
          for i in "${arr[@]}"
          do
            value=$( rbd mirror image status "$i" | head -4 | tail -1 )
            if [[ $value == *"image is primary"* ]]; then
              echo 'image $i is primary skipping sync'
            else
              echo 'image $i is being resync'
              rbd mirror image resync "$i"
            fi
            until rbd mirror image status $i | head -2 | tail -1 | grep -q "global_id:" || :;
            do
              echo '... waiting for image to come back available'
              sleep 1;
            done
            ((j++))
          done
      imagePullPolicy: IfNotPresent
      env:
        - name: ROOK_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: rook-ceph-mon
              key: admin-secret
      volumeMounts:
        - mountPath: /etc/ceph
          name: ceph-config
        - name: mon-endpoint-volume
          mountPath: /etc/rook
  sidecars:
    - name: sidecar-toolbox
      image: quay.io/rcook/storage-rehost:toolbox
      command: ["/tini"]
      args: ["-g", "-s", "--", "/usr/local/bin/toolbox.sh", "--skip-watch"]
      imagePullPolicy: IfNotPresent
      env:
        - name: ROOK_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: rook-ceph-mon
              key: admin-secret
      volumeMounts:
        - mountPath: /etc/ceph
          name: ceph-config
        - name: mon-endpoint-volume
          mountPath: /etc/rook
  volumes:
    - name: mon-endpoint-volume
      configMap:
        name: rook-ceph-mon-endpoints
        items:
        - key: data
          path: mon-endpoints
    - name: ceph-config
      emptyDir: {}
